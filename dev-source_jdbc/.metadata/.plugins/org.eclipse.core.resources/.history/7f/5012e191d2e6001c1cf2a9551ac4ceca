package seoul.legacy.view;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import seoul.legacy.controller.LegacyController;
import seoul.legacy.controller.UserController;
import seoul.legacy.controller.ZzimController;
import seoul.legacy.model.service.ReviewService;
import seoul.legacy.model.service.ZzimService;
import seoul.legacy.model.vo.Legacy;
import seoul.legacy.model.vo.Zzim;
import seoul.legacy.model.vo.Review;
import seoul.legacy.model.vo.User;


public class LegacyInSeoulView {
	// review, zzim, palace, facility, user, legacy controller 호출
//	private UserController uc = new UserController();
	
	private LegacyController lc = new LegacyController();
	private ZzimController zc = new ZzimController();
	private ZzimService zs = new ZzimService();
	private ReviewService rvs = new ReviewService();
	private UserController uc = new UserController();

	private Scanner sc = new Scanner(System.in);
	private String wrongInput = "잘 못 입력하셨습니다. 다시 입력해 주세요.";


	public void mainMenu() {
		while (true) {
			String standardMenu = "\n---=== 서울시 문화재 탐방 ===---\n" + "\n1. 문화재 검색" + "\n2. 궁궐 검색" + "\n3. 서울시 문화재 Top-10";
			String logInMenu = "\n4. 개인정보" + "\n5. 로그아웃";
			String logOutMenu = "\n6. 로그인"+"\n7. 회원가입";
			String exitMenu = "\n9. 종료" + "\n입력 : ";
			StringBuffer sb = new StringBuffer();

			sb.append(standardMenu);
			if (uc.getLoginUser() == null) {
				sb.append(logOutMenu);
			} else {
				sb.append(logInMenu);
			}
			sb.append(exitMenu);

			System.out.print(sb.toString());
			int menuNum = Integer.parseInt(sc.nextLine());

			User user = null;
			int result = 0;
			switch (menuNum) {
			case 1:
				searchLegacy();
				break;// 문화재 검색 첫단
			case 2:
				palaceList();
				break;// 궁궐 검색 첫단
			case 3:
				topTen();
				break;// Top-10
			case 4:
//				userData();
				break;// 개인 정보 조회
			case 5:
				uc.logout();
				break;
			case 6:
				login();
				break;// 로그인
			case 7 :
				user = inputMember();
				System.out.println("신규 가입 확인 : " + user );
				result = uc.insertUser(user);
				System.out.println(result > 0 ? "회원가입 성공" : "회원가입 실패");
				break;
			case 9:
				System.out.println("\n안녕히 가세요!");
				System.exit(0);// 종료
			default:
				System.out.println(wrongInput);
				break;
			}
		}
	}

	private User inputMember() {
		System.out.println("<<< 회원 가입을 환영합니다. >>>");
		System.out.println("가입할 ID : ");
		String userId = sc.nextLine();
		System.out.println("가입할 PW : ");
		String userPw = sc.nextLine();
		System.out.println("가입할 이름 : ");
		String userName = sc.nextLine();
		System.out.println("가입할 Email : ");
		String userEmail = sc.nextLine();
		System.out.println("가입할 Phone : ");
		String userPhone = sc.nextLine();
		
		User user = new User(userId, userPw, userName, userEmail, userPhone);
		return user;
		
	}

	public void login() {
		while(true) {
			System.out.println("================== 로그인 =====================");
			System.out.print("아이디 : ");
			String id = sc.nextLine();
			System.out.print("비밀번호 : ");
			String pw = sc.nextLine();
			boolean result = uc.login(id, pw);
			if(result) {
				System.out.println("로그인에 성공하였습니다!");
				break;
			}else {
				System.out.println("로그인에 실패하였습니다. 다시 입력해주세요.");
			}
		}
	

	}

//	public void userData() {
//		System.out.println("<<< 개인 정보 >>>");
//		System.out.println("1. 내가 찜한 문화재 보기");
//		System.out.println("2. 내가 쓴 리뷰 보기");
//		System.out.print("번호 입력 : ");
//		int choNum = Integer.parseInt(sc.nextLine());
//		
//		switch(choNum) {
//		case 1 :
//			List<Zzim> list = zs.selectById(userId);
//			PrintZzim(list);
//			break;
//		case 2 :
//			List<Review> reviewList = rvs.selectAll();
//			printReview(reviewList);
//			
//		}
//
//	}


	private void PrintZzim(List<Zzim> list) {
		System.out.println("================== 조회 건수 총 :" +list.size()  +"건 ===================");
		for(Zzim zzim : list) {
			System.out.println(zzim.toString());
		}
		System.out.println("=================================================================\n");
		
	}

	private void printReview(List<Review> reviewList) {
		System.out.println("================== 조회 건수 총 :" + reviewList.size() +"건 ===================");
		for(Review review : reviewList) {
			System.out.println(review.toString());
		}
		System.out.println("=================================================================\n");

	}
	
	
	
	public void searchLegacy() {
//		while (true) {
			String menu = "\n<<< 문화재 검색 >>>\n" + "\n1. 이름 검색" + "\n2. 간편 검색" + "\n3. 뒤로 가기" + "\n입력 : ";
			System.out.print(menu);
			int menuNum = Integer.parseInt(sc.nextLine());

			switch (menuNum) {
			case 1:
				searchLegacyByName();
				return;// 이름 검색 탭
			case 2:
				typeSearch();
				return;// 간편 검색 (종목, 시대, 지역)
			case 3:
				return; // 뒤로 가기
			default:
				System.out.println(wrongInput);
				break;
			}
//		}
	}
	
	public void searchLegacyByName() {
		System.out.println("\n<<< 이름 검색 >>>");
		System.out.print("이름 입력 : ");
		String name = sc.nextLine();
		
		List<Legacy> list = lc.selectByLegacyName(name);
				
		int leNum = 0;
		for (int i = 0; i < list.size(); i++) {
			System.out.println();
			int num = i+1;
			System.out.println(num + " : " + list.get(i).toString());
			if(list.size() == 1) {
				System.out.println(list.get(num-1).detailToString());
				Zzim();
//				return leNum = list.get(i).getLegacy_no();
				
//				return;
			}
		}
		
		detailSearch(list);
		
		
	}
	
	public void Zzim() {
		
		if (uc.getLoginUser() != null) {
			User user = uc.getLoginUser();
			String userId = user.getUserId();
			int legacyNo = 0;
			while (true) {
				System.out.println("\n1. 찜 하기~!");
				System.out.println("2. 토막 후기");
				System.out.println("3. 처음으로");
				System.out.print("번호입력 : ");

				int menuNum = Integer.parseInt(sc.nextLine());
				switch (menuNum) {
					case 1:
						zc.insert(userId, legacyNo);
						return;
					case 2:
						int getLegacyNo = 0;	   // 왜? 0이?
						insertReview(getLegacyNo); // 실제로 temp.getLegacyNo
						return;
					case 3:
						return;
					default:
						System.out.println(wrongInput);
						break;
				}
			}
		}
		
	}
	
	
	
	
	
	
	
	

	public void typeSearch() {
		while (true) {			
			System.out.println("<<< 간편 검색 >>>");
			System.out.println("1. 종목 검색");
			System.out.println("2. 지역 검색");
			System.out.println("3. 시대 검색");
			System.out.println("4. 뒤로가기");
			System.out.println("입력 : ");

			int menuNum = Integer.parseInt(sc.nextLine());

			switch (menuNum) {
			case 1:
				searchByCategory();
				return;// 종목 검색
			case 2:
				searchByArea();
				return;// 지역 검색
			case 3:
				searchByEra();
				return;// 시대 검색
			case 4:
				return;
			default:
				System.out.println(wrongInput);
				break;
			}
		}
	}

	public void searchByCategory() {
		String code1 = "국보";			
		String code2 = "보물";
		String code3 = "사적";
		String code4 = "사적및명승";
		String code5 = "명승";
		String code6 = "천연기념물";
		String code7 = "국가무형문화재";
		String code8 = "국가민속문화재";
		String code9 = "시도유형문화재";
		String code10 = "시도무형문화재";
		String code11 = "시도기념물";
		String code12 = "시도민속문화재";
		String code13 = "시도등록문화재";
		String code14 = "문화재자료";
		String code15 = "국가등록문화재";
		String code16 = "이북5도 무형문화재";
		
		String menu = ("\n--------------------------------------------\n"
				+ "1 :  " + code1  + "\t\t\t" + "2 :  " + code2  + "\n"
				+ "3 :  " + code3  + "\t\t\t" + "4 :  " + code4  + "\n" 
				+ "5 :  " + code5  + "\t\t\t" + "6 :  " + code6  + "\n" 
				+ "7 :  " + code7  + "\t\t" + "8 :  " + code8  + "\n" 
				+ "9 :  " + code9  + "\t\t" + "10 : " + code10 + "\n" 
				+ "11 : " + code11 + "\t\t" + "12 : " + code12 + "\n" 
				+ "13 : " + code13 + "\t\t" + "14 : " + code14 + "\n" 
				+ "15 : " + code15 + "\t\t" + "16 : " + code16 + "\n" 
				+ "99 : 메인 메뉴로 돌아가기\n"
				+ "--------------------------------------------");
		while (true) {
			try {
				System.out.println(menu);
				System.out.print("종목 번호를 입력해 주세요 : ");
				int num = Integer.parseInt(sc.nextLine());
				System.out.println();
				
				switch (num) {
					case 1: searchByCategoryInside(code1); break;
					case 2: searchByCategoryInside(code2); break;
					case 3: searchByCategoryInside(code3); break;
					case 4: searchByCategoryInside(code4); break;
					case 5: searchByCategoryInside(code5); break;
					case 6: searchByCategoryInside(code6); break;
					case 7: searchByCategoryInside(code7); break;
					case 8: searchByCategoryInside(code8); break;
					case 9: searchByCategoryInside(code9); break;
					case 10: searchByCategoryInside(code10); break;
					case 11: searchByCategoryInside(code11); break;
					case 12: searchByCategoryInside(code12); break;
					case 13: searchByCategoryInside(code13); break;
					case 14: searchByCategoryInside(code14); break;
					case 15: searchByCategoryInside(code15); break;
					case 16: searchByCategoryInside(code16); break;
					
					case 99:
						mainMenu();
						return;
					default:
						System.out.println(wrongInput);
						break;
				}
			} catch (Exception e) {
				System.out.println(wrongInput);
			}
		}
	}


	public void searchByArea() {
		System.out.print("지역을 입력해 주세요(광진구, 관악 등) : ");
		String area = sc.nextLine();

		List<Legacy> list = lc.selectByLegacyArea(area);
		list = lc.selectByLegacyArea(area);
		
		for (int i = 0; i < list.size(); i++) {
			System.out.println();
			int num = i+1;
			System.out.println(num + " : " + list.get(i).toString());
		}
		
		if(list.size() == 1) {
			detailSearch(list);
		} else {
			detailSearch(list);			
		}
		
	}
	
	
	
	public void searchByEra() {
		System.out.print("시대를 입력해 주세요 ");
		System.out.println("1. 고구려, 2. 백제, 3. 신라, 4. 고려, 5. 조선");
		System.out.print("번호 입력 : ");
		int eraName = Integer.parseInt(sc.nextLine());
		
		String era = "";
		switch(eraName) {
			case 1 :
				era = "고구려";
				break;
			case 2 :
				era = "백제";
				break;
			case 3 :
				era = "신라";
				break;
			case 4 :
				era = "고려";
				break;
			case 5 :
				era = "조선";
				break;
		}

		List<Legacy> list = lc.selectByEra(era);
		
		for (int i = 0; i < list.size(); i++) {
			System.out.println();
			int num = i+1;
			System.out.println(num + " : " + list.get(i).toString());
		}
		
		if(list.size() == 1) {
			detailSearch(list);
		} else {
			detailSearch(list);			
		}
		
	}
	
//	출력 메소드---------------------------------------------------------------
	
	private void searchByCategoryInside(String str) {
		List<Legacy> list = null;
		int count = 0;
		
		list = lc.searchByCategory(str);
		System.out.println("[ " + str + " ]");
		for(Legacy legacy : list) {
			System.out.println(legacy.toString());
			count++;
		}
		System.out.println();
		System.out.println("[ " + str + " 검색완료 ] 자료 수 : " + count + "개");
	}
	
	public void detailSearch(List<Legacy> list) {

		if(list.isEmpty()) {
			System.out.println("검색된 문화재가 없습니다. 간편검색으로 돌아갑니다.");
			searchLegacy();
		}
		
		System.out.println("\n<<< 문화재 상세 정보 >>>");
		System.out.print("결과내에서 번호를 선택하세요 : ");
		int choNum = Integer.parseInt(sc.nextLine())-1;
		
		System.out.println();
		System.out.println(list.get(choNum).detailToString());
		System.out.println(uc.getLoginUser());
		
		if (uc.getLoginUser() != null) {
			User user = uc.getLoginUser();
			String userId = user.getUserId();
			int legacyNo = 0;
			while (true) {
				System.out.println("1. 찜 하기~!");
				System.out.println("2. 토막 후기");
				System.out.println("3. 처음으로");
				System.out.print("번호입력 : ");

				int menuNum = Integer.parseInt(sc.nextLine());
				switch (menuNum) {
				case 1:
					zc.insert(userId, legacyNo);
					return;
				case 2:
					int getLegacyNo = 0;	   // 왜? 0이?
					insertReview(getLegacyNo); // 실제로 temp.getLegacyNo
					return;
				case 3:
					return;
				default:
					System.out.println(wrongInput);
					break;
				}
			}
		}
		
		searchLegacy();
		
	}
	
//	/---------------------------------------------------------------------
	
	public void topTen() {
//		List<Legacy> temp = lc.topTen();
//		List<String> temp = new ArrayList<>();
//		for (int i = 0; i < temp.size(); i++) {
//			System.out.println(i + " : " + temp.get(i));
//		}
//		int menuNum = Integer.parseInt(sc.nextLine());
//
//		// lc.detailPrint(temp.get(menuNum));
		
		List<Legacy> list = new ArrayList<Legacy>();
		list = lc.topTen();
		for(int i=0; i<list.size(); i++) {
			System.out.println((i+1) + ". " + list.get(i));
		}
		

	}

	public void insertReview(int lNo) {
//		System.out.print("토막 후기를 입력해 주세요!\n→ ");
//		String content = sc.nextLine();
//		String userId = uc.getLoginUser().getUserId();
//		Review review = new Review(content, userId, lNo);
//
//		// rc.insertReview(review);

	}

	public void palaceList() {
//		// palace controller 메소드 짜주세여...
//		System.out.println("return type : List<Palace> or HashMap<Integer, Palace> 모두 리턴하는 메소드 짜주세여");
//		// List<Legacy> temp = pc.searchAll;
//		List<String> temp = new ArrayList<>();
//		String menu = "<<< 궁궐 >>>" + "번호 선택 : ";
//		int menuNum = Integer.parseInt(sc.nextLine());
//		// List<Legacy> temp2 = fc.searchByPNo(menuNum);
//		List<String> temp2 = new ArrayList<String>();
//		for (int i = 0; i < temp2.size(); i++) {
//			System.out.println(i + " : " + temp2.get(i));
//		}
//		menuNum = Integer.parseInt(sc.nextLine());
//
////		fc.detailPrint(temp2.get(menuNum)); 시설 디테일 출력 매소드
	}

	public static void main(String[] args) {
		LegacyInSeoulView lisv = new LegacyInSeoulView();

		lisv.mainMenu();
	}
	
	
}
