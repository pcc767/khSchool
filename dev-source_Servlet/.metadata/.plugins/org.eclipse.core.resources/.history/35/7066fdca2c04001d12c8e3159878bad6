package com.kh.mvc.board.model.dao;

import static com.kh.common.jdbc.JDBCTemplate.close;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import com.kh.common.util.PageInfo;
import com.kh.mvc.board.model.vo.Board;
import com.kh.mvc.member.model.vo.Member;

public class BoardDAO {
	
	// 게시물의 갯수를 가져오는 쿼리문
		public int getBoardCount(Connection conn) {
			PreparedStatement pstmt = null;
			ResultSet rs = null;
			String query = "SELECT COUNT(*) FROM BOARD WHERE STATUS='Y'";
			int result = 0;

			try {
				pstmt = conn.prepareStatement(query); 
				rs = pstmt.executeQuery();
				
				if(rs.next()) {
					result = rs.getInt(1);
				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				close(pstmt);
				close(rs);
			}
			return result;
		}


		// 게시물의 리스트를 가져오는 메소드
		public List<Board> findAll(Connection conn, PageInfo pageInfo) {
			PreparedStatement pstmt = null;
			ResultSet rs = null;
			List<Board> list = new ArrayList<Board>();
			
			String query = 
					  "SELECT RNUM, NO, TITLE, ID, CREATE_DATE, ORIGINAL_FILENAME, READCOUNT, STATUS "
					+ "FROM ( "
					+ "    SELECT ROWNUM AS RNUM, NO, TITLE, ID, CREATE_DATE, ORIGINAL_FILENAME, READCOUNT, STATUS "
					+ "    FROM ( "
					+ "        SELECT  B.NO, B.TITLE, M.ID, B.CREATE_DATE, B.ORIGINAL_FILENAME, B.READCOUNT, B.STATUS "
					+ "        FROM BOARD B JOIN MEMBER M ON(B.WRITER_NO = M.NO) "
					+ "        WHERE B.STATUS = 'Y' ORDER BY B.NO DESC "
					+ "    ) "
					+ ") "
					+ "WHERE RNUM BETWEEN ? and ?";

			try {
				pstmt = conn.prepareStatement(query); 
				pstmt.setInt(1, pageInfo.getStartList());
				pstmt.setInt(2, pageInfo.getEndList());
				rs = pstmt.executeQuery();
				while(rs.next()) {
					Board board = new Board();
					board.setRowNum(rs.getInt("RNUM"));
					board.setNo(rs.getInt("NO"));
					board.setTitle(rs.getString("TITLE"));
					board.setWriter_id(rs.getString("ID"));
					board.setCreate_date(rs.getDate("CREATE_DATE"));
					board.setOriginal_filename(rs.getString("ORIGINAL_FILENAME"));
					board.setReadcount(rs.getInt("READCOUNT"));
					board.setStatus(rs.getString("STATUS"));
					list.add(board);
				}
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				close(pstmt);
				close(rs);
			}
			return list;
		}
		

		public static void main(String[] args) {
			Connection conn = getConnection();
			BoardDAO dao = new BoardDAO();
			
			// 게시물 갯수
			int count = dao.getBoardCount(conn);
			System.out.println("총 게시물 수 : " + count);
			System.out.println("-----------------------------------------------");
			// 게시물 리스트
			PageInfo info = new PageInfo(1, 10, count, 10);
			List<Board> list = dao.findAll(conn, info);
			for(Board b : list) {
				System.out.println(b.toString());
			}
			System.out.println("-----------------------------------------------");
		}
	}